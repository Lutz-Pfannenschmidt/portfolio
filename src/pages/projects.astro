---
import DefaultLayout from "../layouts/defaultLayout.astro";

function renderSkeletons(count: number): string {
    let skeletons = '';
    for (let i = 0; i < count; i++) {
        skeletons += `
            <div class="card w-96 h-48 bg-base-100 rounded border-neutral border-2 shadow-xl">
                <div class="skeleton w-full h-full"></div>
            </div>
        `;
    }
    return skeletons;
}
---

<DefaultLayout title="Lutz Pf | Projects">
    <h1 class="text-lg font-bold md:text-2xl lg:text-6xl pt-8 pb-2 text-center">
        Projects
    </h1>
    <p class="text-center italic pb-8">
        These projects are automatically getting fetched from <a
            href="https://github.com/Lutz-Pfannenschmidt"
            class="link decoration-accent">my GitHub account</a
        >.
    </p>

    <div
        class="hero-content text-center flex flex-wrap items-start justify-items-stretch max-w-screen mx-auto"
        id="projects"
				set:html={renderSkeletons(20)}
    >
    </div>

    <script>
        const username: string = "Lutz-Pfannenschmidt";
        const blacklist: string[] = [
            "dotfiles",
            "Flask-webshop-example",
            "RpiWeatherDisplay",
            "Lutz-Pfannenschmidt",
        ];
        const priority: string[] = ["responseplan.de", "ResponsePlan", "yagll"];

        // fetchRepositories(username);

        async function fetchRepositories(username: string): Promise<void> {
            try {
                const response = await fetch(`https://api.github.com/users/${username}/repos`);
                const repos: any[] = await response.json();
                document.getElementById("projects")!.innerHTML = "";
                repos.forEach(renderRepo);
            } catch (error) {
                console.error("Failed to fetch repositories:", error);
            }
        }

        function renderRepo(repo: any): void {
            if (blacklist.includes(repo.name)) return;

            const node = createRepoNode(repo);
            if (priority.includes(repo.name)) {
                document.getElementById("projects")?.prepend(node);
            } else {
                document.getElementById("projects")?.appendChild(node);
            }
        }

        function createRepoNode(repo: any): HTMLElement {
            return new DOMParser().parseFromString(`
                <div class="card w-96 bg-base-100 rounded border-neutral border-2 shadow-xl">
                    <div class="card-body">
                        <h2 class="card-title">${repo.name}</h2>
                        <p class="my-4 text-left">${repo.description || 'No description available'}</p>
                        <div class="card-actions justify-end">
                            ${repo.homepage ? `<a target="_blank" href="${repo.homepage}" class="btn btn-secondary">Website</a>` : ''}
                            <a target="_blank" href="${repo.html_url}" class="btn btn-primary">GitHub</a>
                        </div>
                    </div>
                </div>
            `, 'text/html').body.firstChild as HTMLElement;
        }
    </script>
</DefaultLayout>
